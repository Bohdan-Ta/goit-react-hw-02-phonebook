{"version":3,"sources":["Section/Section.module.css","App/App.module.css","Forms/Forms.module.css","Section/Section.jsx","Forms/Forms.jsx","Contacts/Contacts.jsx","Filter/Filter.jsx","App.js","index.js","Contacts/Contacts.module.css","Filter/Filter.module.css"],"names":["module","exports","Sections","title","children","className","s","section","Forms","state","name","number","handleInput","event","currentTarget","value","setState","handleSubmit","preventDefault","props","getSubmit","resetInput","onSubmit","this","autoComplete","inputContainer","type","pattern","required","onChange","input","label","borderButton","Component","Contacts","contacts","onDeleteContact","map","id","list","onClick","slidingButton","totalContact","length","Filter","searchContact","form","minLength","debounceTimeout","placeholder","App","filter","getDataSubmit","newContact","nanoid","find","contact","alert","contactId","prevState","target","sensitiveSearch","lowerCaseLetters","toLowerCase","trim","includes","filteredContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d24201f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2E98J\",\"title\":\"Section_title__V9ok7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___P6pN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"Forms_inputContainer__3PQq0\",\"input\":\"Forms_input__Ul_Cp\",\"label\":\"Forms_label__1bnMO\",\"borderButton\":\"Forms_borderButton__2ZRa5\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Sections({ title, children }) {\n  return (\n    <section className={s.section}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSections.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { Component } from 'react';\nimport s from './Forms.module.css';\n\nexport default class Forms extends Component {\n  state = { name: '', number: '' };\n\n  handleInput = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.getSubmit(this.state);\n    this.resetInput();\n  };\n  resetInput = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n        <div className={s.inputContainer}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={this.state.name}\n            onChange={this.handleInput}\n            className={s.input}\n          ></input>\n          <label className={s.label}>Name:</label>\n        </div>\n        <div className={s.inputContainer}>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={this.state.number}\n            onChange={this.handleInput}\n            className={s.input}\n          ></input>\n          <label className={s.label}>Number:</label>\n        </div>\n        <button type=\"submit\" className={s.borderButton}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './Contacts.module.css';\n\nexport default function Contacts({ contacts, onDeleteContact }) {\n  return (\n    <>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={s.list}>\n            <div>\n              <p className={s.name}>{name}</p>\n              <p className={s.number}>{number}</p>\n            </div>\n            <button\n              onClick={() => onDeleteContact(id)}\n              className={s.slidingButton}\n            >\n              delete\n            </button>\n          </li>\n        ))}\n      </ul>\n      <p className={s.totalContact}>\n        all contacts in phonebook: {contacts.length}\n      </p>\n    </>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DebounceInput } from 'react-debounce-input';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, searchContact }) {\n  return (\n    <div className={s.form}>\n      <label className={s.label}>\n        Find contact by name:\n        <DebounceInput\n          type=\"text\"\n          autoComplete=\"off\"\n          minLength={3}\n          debounceTimeout={300}\n          placeholder=\"search by name...\"\n          value={value}\n          onChange={searchContact}\n          className={s.input}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport Sections from './Section';\nimport Forms from './Forms/Forms';\nimport Contacts from './Contacts';\nimport Filter from './Filter/Filter';\n\nimport { nanoid } from 'nanoid';\n\nimport s from './App/App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: ' ',\n  };\n\n  getDataSubmit = ({ name, number }) => {\n    const { contacts } = this.state;\n    const newContact = { id: nanoid(), name, number };\n    const searchDublicate = contacts.find(\n      contact => contact.name === newContact.name,\n    );\n\n    if (searchDublicate) {\n      alert(`${newContact.name} is alredy in contacts`);\n      return;\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [newContact, ...contacts],\n      }));\n    }\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  // prescribed logic of contacts is searched by name without registry\n  searchContact = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  sensitiveSearch = () => {\n    const { filter, contacts } = this.state;\n    const lowerCaseLetters = filter.toLowerCase().trim();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerCaseLetters),\n    );\n  };\n  //=====\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.sensitiveSearch();\n    return (\n      <div className={s.container}>\n        <Sections title=\"Phonebook\">\n          <Forms getSubmit={this.getDataSubmit} />\n        </Sections>\n        <Sections title=\"Contacts\">\n          <Filter value={filter} searchContact={this.searchContact} />\n          <Contacts\n            contacts={filteredContacts}\n            onDeleteContact={this.onDeleteContact}\n          />\n        </Sections>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2b0Ss\",\"totalContact\":\"Contacts_totalContact__2lNch\",\"slidingButton\":\"Contacts_slidingButton__1AYWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3waiG\",\"input\":\"Filter_input__QAhIr\",\"label\":\"Filter_label__2xYcQ\"};"],"sourceRoot":""}